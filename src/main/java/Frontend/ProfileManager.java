/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL-G3
 */
public class ProfileManager extends javax.swing.JFrame {

    /**
     * Creates new form ProfileManager
     */
    public ProfileManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        insertProfilePhoto = new javax.swing.JButton();
        insertCoverPhoto = new javax.swing.JButton();
        insertBio = new javax.swing.JTextField();
        insertPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));

        jLabel1.setText("Profile Management");

        insertProfilePhoto.setText("Insert Photo");
        insertProfilePhoto.setActionCommand("");
        insertProfilePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertProfilePhotoActionPerformed(evt);
            }
        });

        insertCoverPhoto.setText("Insert Photo");
        insertCoverPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCoverPhotoActionPerformed(evt);
            }
        });

        insertBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBioActionPerformed(evt);
            }
        });

        insertPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPasswordActionPerformed(evt);
            }
        });

        jLabel2.setText("Profile Picture");

        jLabel3.setText("Cover Photo");

        jLabel4.setText("Bio");

        jLabel5.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(insertCoverPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insertProfilePhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insertBio)
                            .addComponent(insertPassword))
                        .addGap(23, 527, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertProfilePhoto)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertCoverPhoto)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertBio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(296, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertProfilePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertProfilePhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    int returnValue = fileChooser.showOpenDialog(this);
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        String filePath = fileChooser.getSelectedFile().getAbsolutePath();
        JOptionPane.showMessageDialog(this, "Profile photo selected: " + filePath);
        // Save the file path to the backend or database
    }
    }//GEN-LAST:event_insertProfilePhotoActionPerformed

    private void insertCoverPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCoverPhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    int returnValue = fileChooser.showOpenDialog(this);
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        String filePath = fileChooser.getSelectedFile().getAbsolutePath();
        JOptionPane.showMessageDialog(this, "Cover photo selected: " + filePath);
        // Save the file path to the backend or database
    }
    }//GEN-LAST:event_insertCoverPhotoActionPerformed

    private void insertBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBioActionPerformed
        // TODO add your handling code here:
        String bio = insertBio.getText();
    if (!bio.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Bio updated successfully!");
        // Save the bio to the backend or database
    } else {
        JOptionPane.showMessageDialog(this, "Bio cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_insertBioActionPerformed

    private void insertPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPasswordActionPerformed
        // TODO add your handling code here:
        String newPassword = new String(insertPassword.getPassword());
    if (!newPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Password updated successfully!");
        // Save the password (hashed) to the backend or database
    } else {
        JOptionPane.showMessageDialog(this, "Password cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_insertPasswordActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField insertBio;
    private javax.swing.JButton insertCoverPhoto;
    private javax.swing.JPasswordField insertPassword;
    private javax.swing.JButton insertProfilePhoto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
